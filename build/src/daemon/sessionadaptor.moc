/****************************************************************************
** Meta object code from reading C++ file 'sessionadaptor.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.7.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "sessionadaptor.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'sessionadaptor.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.7.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_SessionAdaptor_t {
    QByteArrayData data[10];
    char stringdata0[355];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SessionAdaptor_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SessionAdaptor_t qt_meta_stringdata_SessionAdaptor = {
    {
QT_MOC_LITERAL(0, 0, 14), // "SessionAdaptor"
QT_MOC_LITERAL(1, 15, 15), // "D-Bus Interface"
QT_MOC_LITERAL(2, 31, 38), // "org.freedesktop.DisplayManage..."
QT_MOC_LITERAL(3, 70, 19), // "D-Bus Introspection"
QT_MOC_LITERAL(4, 90, 228), // "  <interface name=\"org.freed..."
QT_MOC_LITERAL(5, 298, 4), // "Lock"
QT_MOC_LITERAL(6, 303, 0), // ""
QT_MOC_LITERAL(7, 304, 4), // "Seat"
QT_MOC_LITERAL(8, 309, 15), // "QDBusObjectPath"
QT_MOC_LITERAL(9, 325, 8) // "UserName"

    },
    "SessionAdaptor\0D-Bus Interface\0"
    "org.freedesktop.DisplayManager.Session\0"
    "D-Bus Introspection\0"
    "  <interface name=\"org.freedesktop.DisplayManager.Session\">\n    <me"
    "thod name=\"Lock\"/>\n    <property access=\"read\" type=\"o\" name=\""
    "Seat\"/>\n    <property access=\"read\" type=\"s\" name=\"UserName\"/>"
    "\n  </interface>\n\0"
    "Lock\0\0Seat\0QDBusObjectPath\0UserName"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SessionAdaptor[] = {

 // content:
       7,       // revision
       0,       // classname
       2,   14, // classinfo
       1,   18, // methods
       2,   24, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // classinfo: key, value
       1,    2,
       3,    4,

 // slots: name, argc, parameters, tag, flags
       5,    0,   23,    6, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

 // properties: name, type, flags
       7, 0x80000000 | 8, 0x00095009,
       9, QMetaType::QString, 0x00095001,

       0        // eod
};

void SessionAdaptor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SessionAdaptor *_t = static_cast<SessionAdaptor *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->Lock(); break;
        default: ;
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        SessionAdaptor *_t = static_cast<SessionAdaptor *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QDBusObjectPath*>(_v) = _t->seat(); break;
        case 1: *reinterpret_cast< QString*>(_v) = _t->userName(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
    Q_UNUSED(_a);
}

const QMetaObject SessionAdaptor::staticMetaObject = {
    { &QDBusAbstractAdaptor::staticMetaObject, qt_meta_stringdata_SessionAdaptor.data,
      qt_meta_data_SessionAdaptor,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *SessionAdaptor::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SessionAdaptor::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_SessionAdaptor.stringdata0))
        return static_cast<void*>(const_cast< SessionAdaptor*>(this));
    return QDBusAbstractAdaptor::qt_metacast(_clname);
}

int SessionAdaptor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractAdaptor::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 2;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}
QT_END_MOC_NAMESPACE
